head(mtcars2n)
head(mtcars3)
head(mtcars3n)
head(merge(mtcars2n, mtcars3n))
head(merge(mtcars2n, mtcars3n))
merge(mtcars2n, mtcars3n)
merge(mtcars2, mtcars3)
merge(mtcars2, mtcars2n)
class(mtcars2)
class(mtcars2n)
rm(list = ls())
mtcars2 <- mtcars %>% select(carname, mpg, disp, drat, cyl) %>% arrange(mpg)
mtcars3 <- mtcars %>% select(carname, cyl, hp, wt, mpg) %>% arrange(cyl)
mtcars2 <- mtcars %>% select(carname, mpg, disp, drat, cyl) %>% arrange(mpg)
mtcars <- mutate(mtcars, carname = row.names(mtcars))
mtcars2 <- mtcars %>% select(carname, mpg, disp, drat, cyl) %>% arrange(mpg)
mtcars3 <- mtcars %>% select(carname, cyl, hp, wt, mpg) %>% arrange(cyl)
mtcars2n <- mtcars2
mtcars2n$mpg <- 1:32
mtcars3n <- mtcars3
mtcars3n$cyl <- 101:132
head(mtcars2)
head(mtcars2n)
head(mtcars3)
head(mtcars3n)
merge(mtcars2n, mtcars3n)
merge(mtcars2n, mtcars3n, by = 'carnames')
merge(mtcars2n, mtcars3n, by = 'carname')
merge(mtcars2n, mtcars3n, by = c('carname', 'mpg'))
merge(mtcars2n, mtcars3n, by = c('carname', 'cyl'))
merge(mtcars2n, mtcars3n, all = T)
head(merge(mtcars2n, mtcars3n, all = T))
merge(mtcars2n, mtcars3n, by = c('carname', 'cyl'), all = T)
head(merge(mtcars2n, mtcars3n, all = T))
head(merge(mtcars2n, mtcars3n, by = 'carname'))
head(merge(mtcars2n, mtcars3n, by = c('carname', 'cyl'), all = T))
head(merge(mtcars2n, mtcars3n, by= 'mpg', all = T)
head(merge(mtcars2n, mtcars3n, by= 'mpg', all = T))
head(merge(mtcars2n, mtcars3n, by= 'mpg', all = T))
intersect(names(mtcars2), names(mtcars3))
join(mtcars2, mtcars3)
?join
join(mtcars2, mtcars3, by = 'carnames')
join(mtcars2, mtcars3, by = 'carname')
join(mtcars2n, mtcars3n)
join(mtcars3n, mtcars2n)
df1 <- data.frame(id = sample(1:10), x = rnorm(10))
df2 <- data.frame(id = sample(1:10), y = rnorm(10))
df3 <- data.frame(id = sample(1:10), z = rnorm(10))
source('D:/Documents/Coursera/Data Science/3. Getting and Cleaning Data/scribbling w3.R', echo=TRUE)
join(df1, df2)
join(df1, df2, df3)
arrange(join(df1, df2), id)
dflist <- list(df1, df2, df3)
?join_all
join_all(dflist)
arrange(join_all(dflist), id)
rm(list = ls())
set.seed(13425)
x <- data.frame("var1" = sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
x
x <- x[sample(1:5), ]; x$var2[c(1, 3)] <- NA
x
x[, "var1"]
x[c(1, 2), "var2"]
x[(x$var1>=3 | x$var3 <=12), ]
x[x$var2 <=8, ] #goes crazy when NAs present
x[which(x$var2 <= 8), ]
sort(x$var2)  ##does not give the NA values
sort(x$var2, na.last = T)
sort(x$var2, na.last = F)
order(x$var2)
order(x$var3) ##GIVES THE INDICES instead of actual values, after arranging
x[order(x$var1), ]   #sort whole rows according to the col of var1
x[sort(x$var1), ]   #just gets col of var1 in order, others remain same.
x[order(x$var1, desc = F), ]   #sort whole rows according to the col of var1
?order
x[order(x$var1,decreasing = T), ]   #sort whole rows according to the col of var1
arrange(x, var1)
library(plyr)
?arrange
arrange(x, var1)
arrange(x, desc(var1))
identical(x[order(x$var1), ], arrange(x, var1)) #False ,
#both gives similar results except that the order subsetting preserves
#the row number indices, but 'arrange' func of 'plyr' package resets it
x$var4 <- round(rnorm(5, 10, 5), 0)
x
y <- cbind(x, rbinom(5, 10, 0.2))
y
read.csv("restdata.csv")
restdata <- read.csv(file = urll, stringsAsFactors = F)
head(restdata)
restdata <- read.csv(file = urll, stringsAsFactors = F)
urll <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
restdata <- read.csv(file = urll, stringsAsFactors = F)
head(restdata)
tail(restdata)
quantile(restdata$councilDistrict, na.rm = T)
quantile(restdata$councilDistrict, probs = c(.5, .6))
table(restdata$zipCode)
table(restdata$zipCode, useNA = "always")#will make a heading of NA regardless of presence
table(restdata$zipCode, restdata$councilDistrict) #will make contingency table
table(restdata$zipCode==21212)  #fine for 1
table(restdata$zipCode %in% 21212)
table(restdata$zipCode %in% c(21212, 21213, 21214)) #this gives correct answer
restdata[restdata$zipCode %in% c(21212, 21213), ] # can be used for subsetting
data("UCBAdmissions")
df <- as.data.frame(UCBAdmissions)
dim(UCBAdmissions)
colnames(df)
xtabs(Freq ~ Gender + Admit, data = df)
xtabs(Freq ~ Dept + Admit, data = df)
##Error in Summary.factor(1:2, na.rm = TRUE) :
##‘sum’ not meaningful for factors
str(warpbreaks)
xtabs(breaks ~ tension + wool, data = warpbreaks)
xt <- xtabs(breaks ~ ., data = warpbreaks) ## using "." instead of variable names will make
warpbreaks$replicate <- rep(1:9, length =  nrow(warpbreaks))
xt <- xtabs(breaks ~ ., data = warpbreaks)
ftable(xt) #converts multidimentional table into 2 x 2 table
seq(1, 10, by = 3)
seq(1, 10, by = 2)
seq(1, 10, length.out = 4)
seq_along(x)
restdata$nearme <- restdata$neighborhood %in% c("Frankford", "Clifton Park")
head (restdata$nearme)
restdata[restdata$nearme == T, "name"]
table(restdata$nearme)
restdata$zipwrong <- ifelse(restdata$zipCode < 0, TRUE, FALSE)
table(restdata$zipwrong)
?cut
restdata$zipgroups <- cut(restdata$zipCode, breaks = quantile(restdata$zipCode),
labels = c("first", "second", "third", "fourth"))
table(restdata$zipgroups)
library(Hmisc)
restdata$zipgroups2 <- cut2(restdata$zipCode, g = 4)
table(restdata$zipgroups2)
restdata$zcf <- factor(restdata$zipCode)
head(restdata$zcf)
library(plyr)
restdata3 <- mutate(restdata, zipgroups3 <- cut2(restdata, g=4))
restdata3
heas(restdata3)
head(restdata3)
restdata3 <- mutate(restdata, zipgroups3 <- cut2(restdata$zipCode, g=4))
head(restdata3)
restdata3 <- mutate(restdata, zipgroups3 = cut2(restdata$zipCode, g=4))
head(restdata3)
library(reshape2)
mtcars$carname <- rownames(mtcars)
carmelt <- melt(mtcars, id = c('carname', 'gear', 'cyl'), measure.vars = c('mpg', 'hp'))
cyldata <- dcast(carmelt, cyl ~ variable)
cyldata
cyldatahp <- dcast(carmelt, cyl ~ variable.names('hp'))
cyldatahp
cylmean <- dcast(carmelt, cyl ~ variable, mean)
round(cylmean, 0)
gearsd <- round(dcast(carmelt, gear ~ variable, sd),1)
gearsd
tapply(InsectSprays$count, InsectSprays$spray, sum)
spins <- split(InsectSprays$count, InsectSprays$spray)
spins
lapply(spins, sum)
unlist(lapply(spins, sum))
sapply(spins, sum)
library(plyr)
ddply(InsectSprays, .(spray))
ddply(InsectSprays, .(spray), summarise, sum = sum(count))
ddply(InsectSprays, .(spray), summarize, mean = round(mean(count), 1))
ddply(InsectSprays, .(spray), summarize, mean = mean(count))
ddply(InsectSprays, 'spray', summarize, sum =sum(count))
library(plyr)
ddply(InsectSprays, .(spray), summarise, sum = sum(count))
ddply(InsectSprays, .(spray), summarize, mean = round(mean(count), 1))
ddply(InsectSprays, 'spray', summarize, sum =sum(count))
ave(mtcars$mpg, mtcars$gear, mean) #will calculate the mean mpg of the cars of that particular
?ddply
ddply(InsectSprays, .(spray))
ddply(mtcars, .(gear))
ddply(InsectSprays, .(spray), summarise, sum = sum(count))
ddply(InsectSprays, .(spray), summarize, mean = round(mean(count), 1))
ddply(InsectSprays, 'spray', summarize, sum =sum(count))
?ave
ave(mtcars$mpg, mtcars$gear, mean) #will calculate the mean mpg of the cars of that particular
ave(mtcars$mpg, mtcars$gear, mean) #will calculate the mean mpg of the cars of that particular
library(reshape2)
library(stringi)
library(stringr)
ddply(InsectSprays, .(spray))
ddply(mtcars, .(gear))
ddply(InsectSprays, .(spray), summarise, sum = sum(count))
ddply(InsectSprays, .(spray), summarize, mean = round(mean(count), 1))
?ddply
ddply(mtcars, .(gear))
ddply(InsectSprays, .(spray), summarize, mean = round(mean(count), 1))
ddply(InsectSprays, 'spray', summarize, sum =sum(count))
?ave
ave(mtcars$mpg, mtcars$gear, mean) #will calculate the mean mpg of the cars of that particular
ave(mtcars$mpg, mtcars$gear, FUN = mean) #will calculate the mean mpg of the cars of that particular
ddply(InsectSprays, .(spray), summarise, sum = sum(count))
ddply(InsectSprays, .(spray), summarize, mean = round(mean(count), 1))
ddply(InsectSprays, .(spray), summarize, FUN = mean = round(mean(count), 1))
ddply(InsectSprays, .(spray), summarize, mean = FUN = round(mean(count), 1))
source('D:/Documents/Coursera/Data Science/3. Getting and Cleaning Data/scribbling w3.R', echo=TRUE)
?read.csv
gdp <- read.csv("gdp1.csv",
skip = 3,
header = T,
nrows = 190,
col.names = c("countrycode", "ranking", "country", "milusd"))
gdp <- read.csv("gdp1.csv",
skip = 3,
header = T,
nrows = 190,
stringsAsFactors = T)
head(gdp)
gdp <- read.csv("gdp1.csv",
skip = 5,
header = T,
nrows = 190,
stringsAsFactors = T)
head(gdp)
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T)
head(gdp)
?colnames
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T,
select) %>%
[ , c(1, 2, 4, 5)] %>%
colnames(c("countrycode", "ranking", "country", "milusd"))
gdp <-        gdp[ , c(1, 2, 4, 5)]
colnames(gdp, c("countrycode", "ranking", "country", "milusd"))
colnames(gdp, c("countrycode", "ranking", "country", "milusd"))
head(gdp)
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T,
select) %>%
[ , c(1, 2, 4, 5)]
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T,
select) %>%
[ ,c(1, 2, 4, 5)]
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T) %>%
[ ,c(1, 2, 4, 5)]
d
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T)
colnames(gdp)
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T) %>%
select(V1:V2, V4:V5)
library(dplyr)
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T) %>%
select(V1:V2, V4:V5)
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T) %>%
select(V1:V2, V4:V5) %>%
colnames = c("countrycode", "ranking", "country", "milusd")
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T) %>%
select(V1:V2, V4:V5)
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T) %>%
select(V1:V2, V4:V5) %>%
rename(countrycode = V1, ranking = V2, country = V3, milusd = V4)
gdp <- read.csv("gdp1.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = T) %>%
select(V1:V2, V4:V5) %>%
rename(countrycode = V1, ranking = V2, country = V4, milusd = V5)
head(gdp)
tail(gdp)
#3
library(dplyr)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
edu <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
?read.csv
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
select(V1,V2, V4,V5) %>%
rename(countrycode = V1, ranking = V2, country = V4, milusd = V5)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
rm(list = ls())
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
rm(list = ls())
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
rm(ls = list())
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
rm(list = ls())
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
rm('edu')
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
rm(edu)
#3
library(dplyr)
edu <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
select(V1V2, V4:V5) %>%
rename(countrycode = V1, ranking = V2, country = V4, milusd = V5)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
select(V1,V2, V4:V5) %>%
rename(countrycode = V1, ranking = V2, country = V4, milusd = V5)
names(edu)
View(edu)
View(edu)
View(gdp)
head(edu)
tail(edu)
?merge
gdpedu <- merge(gdp, edu, by.x = "countrycode", by.y = "CountryCode")
names(gdpedu)
arrange(gdp, desc(ranking)) %>% select(country)[13]
names(gdp)
arrange(gdp, desc(ranking)) %>% select(country)
arrange(gdp, desc(ranking)) %>% select(country) %>% [13]
arrange(gdp, desc(ranking)) %>% select(country)[13]
arrange(gdp, desc(ranking)) %>% select(country)
?filter
arrange(gdp, desc(ranking)) %>% select(country) %>% filter(row_number(13))
arrange(gdp, desc(ranking)) %>% select(country) %>% filter(row_number = 13)
arrange(gdp, desc(ranking)) %>% select(country) %>% filter(row_number == 13)
arrange(gdp, desc(ranking))[13, "country"]
names(gdpedu)
unique(gdpedu$Income.Group)
table(gdpedu$Income.Group)
?table
income  <- group_by(gdpedu, Income.Group)
summarise(income, averank = mean(ranking))
round(summarise(income, averank = mean(ranking)), 4)
summarise(income, averank = round(mean(ranking), 4)
)
#5
library(Hmisc)
quantiles <- cut2(gdp$ranking, g=5)
?cut2
?factor
quantiles <- cut2(gdp$ranking, g=5, labels = c(1:5))
quantiles <- cut2(gdp$ranking, g=5, labels = c('1', '2', '3', '4', '5'))
quantiles
table(quantiles)
rankgroups <- group_by(gdp, quantiles)
gdp$quantiles <- cut2(gdp$ranking, g=5)
rankgroups <- group_by(gdp, quantils)
rankgroups <- group_by(gdp, quantiles)
rankgroups
rankgroups$quantiles[1]
select(rankgroups, country)
table(select(rankgroups, country))
rankgroups <- group_by(gdp, quantiles)
gdpedu$quantiles <- cut2(gdpedu$ranking, g=5)
rankgroups <- group_by(gdpedu, quantiles)
filter(gdpedu, quantiles == "[ 1, 39)") %>% select(country)
filter(gdpedu, quantiles == "[ 1, 39)")
class(gdpedu$quantiles)
gdpedu$quantiles[1]
gdpedu$quantiles[2]
gdpedu$quantiles[3]
gdpedu$quantiles[4]
gdpedu$quantiles[5]
gdpedu$quantiles[6]
names(gdpedu)
unique(gdpedu$Income.Group)
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(number = nrow)
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(number = nrow(rankgroups))
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(number = nrow())
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(number = nrow(quantiles))
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(number = length)
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(number = mean(ranking))
filter(rankgroups, Income.Group == "Lower middle income")
count(gdpedu$Income.Group)
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(count = nrow(country))
?count
count(gdp$ranking)
count(gdp$country)
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(count = count(country))
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(nrow())
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(nrow)
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(count = nrow)
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(count = print(country))
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(count = length(print(country)))
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(count = length(country))
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(count = length(country)))
filter(rankgroups, Income.Group == "Lower middle income") %>% summarise(count = length(country))
#1
house <- read.csv(file = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
agricultureLogical <- ifelse(house$AGS == 6 & house$ACR == 3, TRUE, FALSE)
head(which(agricultureLogical), 3)
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "test.jpg", mode = "wb")
jpeg <- readJPEG(source = "test.jpg", native = T)
?quantile
quantile(jpeg, probs = c(.3, .8))
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "test.jpg", method = "curl")
jpeg <- readJPEG(source = "test.jpg", native = T)
library(jpeg)
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "test.jpg", mode = "wb")
jpeg <- readJPEG(source = "test.jpg", native = T)
quantile(jpeg, probs = c(.3, .8))
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "test.jpg")
jpeg <- readJPEG(source = "test.jpg", native = T)
quantile(jpeg, probs = c(.3, .8))
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile = "test.jpg", method = "curl")
jpeg <- readJPEG(source = "test.jpg", native = T)
quantile(jpeg, probs = c(.3, .8))
rm(list = ls())
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
header = F,
skip = 5,
nrows = 190,
select = c(1, 2, 4, 5),
col.names = c("countrycode", "ranking", "country", "milusd"))
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
header = F,
skip = 5,
nrows = 190,
select(1, 2, 4, 5),
col.names = c("countrycode", "ranking", "country", "milusd"))
edu <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
header = F,
nrows = 190,
stringsAsFactors = F) %>%
select(V1,V2, V4:V5) %>%
rename(countrycode = V1, ranking = V2, country = V4, milusd = V5)
gdpedu <- merge(gdp, edu, by.x = "countrycode", by.y = "CountryCode")
tapply(gdpedu$rank, gdpedu$Income.Group, mean)
?tapply
tapply(gdpedu$rank, gdpedu$Income.Group, mean, simplify = T)
